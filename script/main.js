//JS: PRIMER ENTREGA - Consulta por grupo ideal: la idea ser√≠a agregar un bot√≥n, en la p√°gina <clases>, para que las personas puedan consultar en qu√© horario entrar√≠an (ya que, especialmente con los ni√±os/adolescentes, es una duda recurrente).

//Primero declaro la <funci√≥n> que engloba los distintos grupos, seg√∫n la edad--> condicional.
function grupoAikido(edad) {
  //Utilizo un <else if> para dividir los grupos. De acuerdo a la edad, devuelve el mensaje correspondiente.
  if (edad < 4) {
    return "La edad m√≠nima para comenzar es de 4 a√±os... ¬°Esperemos un poquito m√°s! üòä";
  } else if (edad < 12) {
    return "Le corresponde el horario de Aikido Kids (revisar grilla).";
  } else if (edad < 18) {
    return "Le corresponde el horario de Adultos (revisar grilla), pero te recomendamos el horario de - lun, mie y vie a las 19:30hs - , ya que hay un buengrupo de adolescentes practicando ah√≠ üëç";
  } else if (edad < 70) {
    return "Le corresponde el horario de Adultos (revisar grilla).";
  } else {
    return "Le corresponde el horario de Adultos (revisar grilla). Por cierto: no hay l√≠mite de edad para comenzar ¬°Te esperamos!üòâ";
  }
}

//Este alert podr√≠a ser reemplazado por un bot√≥n, m√°s adelante.
alert(
  "¬°Bienvenido! Aqu√≠ podr√°s consultar en qu√© grupo de Aikido entrar√≠as, seg√∫n la edad üòä"
);

//Declaraci√≥n de la variable, cuyo valor ingresar√° el usuario.
let edadAlumno;

// Utilizo un <do... while> para asegurarme de que el usuario ingrese correctamente la informaci√≥n solicitada (sin script y sin dejar el mensaje en blanco).
do {
  edadAlumno = prompt(
    "Ingresa tu edad, o la de la persona interesada en comenzar (solo n√∫meros):"
  );
} while (isNaN(edadAlumno) || edadAlumno.trim() === "");

// Se da la respuesta correspondiente en un alert, llamando a la funci√≥n, previamente configurada, y a la variable ya declarada, con un parseInt para convertirla en un valor num√©rico.
alert(grupoAikido(parseInt(edadAlumno)));


//--> Fin de mi primer algoritmo/programa ‚ù§